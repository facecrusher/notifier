// Code generated by MockGen. DO NOT EDIT.
// Source: ./request_builder.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	response "github.com/facecrusher/notifier/rest/response"
	gomock "github.com/golang/mock/gomock"
)

// MockReqBuilder is a mock of ReqBuilder interface.
type MockReqBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockReqBuilderMockRecorder
}

// MockReqBuilderMockRecorder is the mock recorder for MockReqBuilder.
type MockReqBuilderMockRecorder struct {
	mock *MockReqBuilder
}

// NewMockReqBuilder creates a new mock instance.
func NewMockReqBuilder(ctrl *gomock.Controller) *MockReqBuilder {
	mock := &MockReqBuilder{ctrl: ctrl}
	mock.recorder = &MockReqBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReqBuilder) EXPECT() *MockReqBuilderMockRecorder {
	return m.recorder
}

// DoPost mocks base method.
func (m *MockReqBuilder) DoPost(url string, body interface{}) *response.ReqResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoPost", url, body)
	ret0, _ := ret[0].(*response.ReqResponse)
	return ret0
}

// DoPost indicates an expected call of DoPost.
func (mr *MockReqBuilderMockRecorder) DoPost(url, body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoPost", reflect.TypeOf((*MockReqBuilder)(nil).DoPost), url, body)
}
